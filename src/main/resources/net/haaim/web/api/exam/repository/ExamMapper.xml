<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.haaim.web.api.exam.repository.ExamMapper">
    <select id="findAllByStudentNo" resultType="net.haaim.web.api.exam.entity.ExamItemEntity">
    	<![CDATA[
			SELECT   c.year,
			         b.class_no,
			         c.cur,
			         b.sdate,
			         b.input_date,
			         b.count,
			         b.score,
			         b.pass,
			         b.stare
			FROM     (
			                SELECT b.cc_no,
			                       b.class_no,
			                       b.exam_no,
			                       a.student_no,
			                       Date_format(b.sdate,'%Y-%m-%d')                                   sdate,
			                       Date_format(a.input_date,'%Y-%m-%d')                              input_date,
			                       b.count                                                           count,
			                       a.score                                                           score,
			                       IF(a.status != 2, If(a.score >= b.goal_score,'pass' ,'fail'),'-') pass,
			                       IF(a.status = 1, '미응시', '응시')                           stare,
			                       a.status
			                FROM   exam_user a
			                JOIN   exam_list b
			                WHERE  a.exam_no = b.exam_no) b
					JOIN
			         (
			                SELECT a.year,
			                       c.no,
			                       c.class_no,
			                       a.class_name,
			                       --  c.cur_id, m.cno,
			                              concat(m.grade,'> ', m.course, '> ', getcurnm(m.large_category, m.medium_category)) AS cur
			                FROM   class_curriculum c
			                JOIN   class a
			                JOIN   curriculum m
			                WHERE  c.class_no = a.class_no
			                	AND    c.cur_id = m.cno) c
			WHERE    b.cc_no = c.no
				AND      b.student_no = #{studentNo}
			         -- and date_format(b.출제일,'%Y%m') = date_format(sysdate(),'%Y%m')   -- 조회조건 : 년월
			         -- and b.status = '3'              -- 조회조건 : 응시여부
			ORDER BY year,
			         class_no,
			         cur
		 ]]>
    </select>
    <select id="monthlyExamStatus" resultType="net.haaim.web.api.exam.entity.MonthlyExamStatusEntity">
    	<![CDATA[
			SELECT Sum(a.pass) pass, Sum(a.fail)   fail
			FROM (
				SELECT   e.class_no,
						 e.exam_no,
						 IF(e.goal_score <= u.score,1,0) pass,
						 IF(e.goal_score > u.score,1,0) fail,
						 u.score,
						 e.goal_score
				FROM     exam_list e
					JOIN     exam_user u ON e.exam_no = u.exam_no
				WHERE    e.state = 1
					AND      u.student_no = #{studentNo}
					AND      date_format(sysdate(),'%Y%m%d') >= e.sdate
					AND      date_format(sysdate(),'%Y%m%d') <= e.edate
			) a
			GROUP BY a.pass, a.fail;
		 ]]>
    </select>
    
    <select id="classAverageInWeekly" resultType="net.haaim.web.api.exam.entity.ExamAverageEntity">
    	<![CDATA[
    		SELECT av.class_no, av.eDate as date, sum(av.avg)/count(av.exam_no) average
			FROM (
			SELECT e.class_no , e.exam_no, e.eDate, round(sum(u.score)/sum(if(u.status=1,0,1)),2) avg
			FROM exam_list e join exam_user u
			where e.exam_no = u.exam_no
			and e.state = 1
			and date_format(eDate,'%Y-%m-%d') in ( -- 해당 일자의 주간일자 일~토
					SELECT
						ADDDATE( #{start_date}, - DAYOFWEEK(#{start_date}) + 1 ) AS DAY
					UNION ALL SELECT 
						ADDDATE( #{start_date}, - DAYOFWEEK(#{start_date}) + 2 ) AS DAY
					UNION ALL SELECT 
						ADDDATE( #{start_date}, - DAYOFWEEK(#{start_date}) + 3 ) AS DAY
					UNION ALL SELECT 
						ADDDATE( #{start_date}, - DAYOFWEEK(#{start_date}) + 4 ) AS DAY
					UNION ALL SELECT 
						ADDDATE( #{start_date}, - DAYOFWEEK(#{start_date}) + 5 ) AS DAY
					UNION ALL SELECT 
						ADDDATE( #{start_date}, - DAYOFWEEK(#{start_date}) + 6 ) AS DAY
					UNION ALL SELECT 
						ADDDATE( #{start_date}, - DAYOFWEEK(#{start_date}) + 7 ) AS DAY
				)
			group by class_no, exam_no) av
			
			group by av.class_no, av.eDate;
    	]]>
    </select>
    <select id="dailyTakeExamStatus" resultType="net.haaim.web.api.exam.entity.DailyTakeExamStatusEntity">
    	<![CDATA[
    		SELECT   e.edate                                                                        end_date,
			         round(sum(IF(u.status=1,0,1)) /count(u.status) * 100)                          total_take,
			         round((count(u.status) - sum(IF(u.status=1,0,1)) ) / count(u.status) * 100)    total_miss
			FROM     exam_list e
			JOIN     exam_user u
			WHERE    e.exam_no = u.exam_no
				AND      state = 1
				AND      date_format(sysdate(),'%Y%m%d') = e.edate
			GROUP BY e.edate;
    	]]>
    </select>
</mapper>