/*
 * This file is generated by jOOQ.
 */
package net.haaim.web.jooq.entity.tables.records;


import java.time.LocalDateTime;

import net.haaim.web.jooq.entity.tables.JExamList;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 문제출제목록
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JExamListRecord extends UpdatableRecordImpl<JExamListRecord> implements Record16<Integer, String, Integer, Integer, String, String, String, Integer, Integer, String, Integer, Integer, String, LocalDateTime, String, LocalDateTime> {

    private static final long serialVersionUID = -1792542675;

    /**
     * Setter for <code>haaim_db.exam_list.exam_no</code>. 출제번호
     */
    public void setExamNo(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.exam_no</code>. 출제번호
     */
    public Integer getExamNo() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>haaim_db.exam_list.date</code>. 출제일자
     */
    public void setDate(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.date</code>. 출제일자
     */
    public String getDate() {
        return (String) get(1);
    }

    /**
     * Setter for <code>haaim_db.exam_list.class_no</code>.
     */
    public void setClassNo(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.class_no</code>.
     */
    public Integer getClassNo() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>haaim_db.exam_list.grade</code>. 학년
     */
    public void setGrade(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.grade</code>. 학년
     */
    public Integer getGrade() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>haaim_db.exam_list.course</code>. 학기/과정
     */
    public void setCourse(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.course</code>. 학기/과정
     */
    public String getCourse() {
        return (String) get(4);
    }

    /**
     * Setter for <code>haaim_db.exam_list.medium_category</code>. 중분류
     */
    public void setMediumCategory(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.medium_category</code>. 중분류
     */
    public String getMediumCategory() {
        return (String) get(5);
    }

    /**
     * Setter for <code>haaim_db.exam_list.type_group</code>. 유형그룹
     */
    public void setTypeGroup(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.type_group</code>. 유형그룹
     */
    public String getTypeGroup() {
        return (String) get(6);
    }

    /**
     * Setter for <code>haaim_db.exam_list.count</code>. 문항수
     */
    public void setCount(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.count</code>. 문항수
     */
    public Integer getCount() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>haaim_db.exam_list.level_difficulty</code>. 난이도
     */
    public void setLevelDifficulty(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.level_difficulty</code>. 난이도
     */
    public Integer getLevelDifficulty() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>haaim_db.exam_list.target</code>. 응시대상
     */
    public void setTarget(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.target</code>. 응시대상
     */
    public String getTarget() {
        return (String) get(9);
    }

    /**
     * Setter for <code>haaim_db.exam_list.goal_score</code>. pass 기준점수
     */
    public void setGoalScore(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.goal_score</code>. pass 기준점수
     */
    public Integer getGoalScore() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>haaim_db.exam_list.state</code>. 출제상태(출제/미출제)
     */
    public void setState(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.state</code>. 출제상태(출제/미출제)
     */
    public Integer getState() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>haaim_db.exam_list.input_id</code>.
     */
    public void setInputId(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.input_id</code>.
     */
    public String getInputId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>haaim_db.exam_list.input_date</code>.
     */
    public void setInputDate(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.input_date</code>.
     */
    public LocalDateTime getInputDate() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>haaim_db.exam_list.update_id</code>.
     */
    public void setUpdateId(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.update_id</code>.
     */
    public String getUpdateId() {
        return (String) get(14);
    }

    /**
     * Setter for <code>haaim_db.exam_list.update_date</code>.
     */
    public void setUpdateDate(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>haaim_db.exam_list.update_date</code>.
     */
    public LocalDateTime getUpdateDate() {
        return (LocalDateTime) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, String, Integer, Integer, String, String, String, Integer, Integer, String, Integer, Integer, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<Integer, String, Integer, Integer, String, String, String, Integer, Integer, String, Integer, Integer, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JExamList.EXAM_LIST.EXAM_NO;
    }

    @Override
    public Field<String> field2() {
        return JExamList.EXAM_LIST.DATE;
    }

    @Override
    public Field<Integer> field3() {
        return JExamList.EXAM_LIST.CLASS_NO;
    }

    @Override
    public Field<Integer> field4() {
        return JExamList.EXAM_LIST.GRADE;
    }

    @Override
    public Field<String> field5() {
        return JExamList.EXAM_LIST.COURSE;
    }

    @Override
    public Field<String> field6() {
        return JExamList.EXAM_LIST.MEDIUM_CATEGORY;
    }

    @Override
    public Field<String> field7() {
        return JExamList.EXAM_LIST.TYPE_GROUP;
    }

    @Override
    public Field<Integer> field8() {
        return JExamList.EXAM_LIST.COUNT;
    }

    @Override
    public Field<Integer> field9() {
        return JExamList.EXAM_LIST.LEVEL_DIFFICULTY;
    }

    @Override
    public Field<String> field10() {
        return JExamList.EXAM_LIST.TARGET;
    }

    @Override
    public Field<Integer> field11() {
        return JExamList.EXAM_LIST.GOAL_SCORE;
    }

    @Override
    public Field<Integer> field12() {
        return JExamList.EXAM_LIST.STATE;
    }

    @Override
    public Field<String> field13() {
        return JExamList.EXAM_LIST.INPUT_ID;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return JExamList.EXAM_LIST.INPUT_DATE;
    }

    @Override
    public Field<String> field15() {
        return JExamList.EXAM_LIST.UPDATE_ID;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return JExamList.EXAM_LIST.UPDATE_DATE;
    }

    @Override
    public Integer component1() {
        return getExamNo();
    }

    @Override
    public String component2() {
        return getDate();
    }

    @Override
    public Integer component3() {
        return getClassNo();
    }

    @Override
    public Integer component4() {
        return getGrade();
    }

    @Override
    public String component5() {
        return getCourse();
    }

    @Override
    public String component6() {
        return getMediumCategory();
    }

    @Override
    public String component7() {
        return getTypeGroup();
    }

    @Override
    public Integer component8() {
        return getCount();
    }

    @Override
    public Integer component9() {
        return getLevelDifficulty();
    }

    @Override
    public String component10() {
        return getTarget();
    }

    @Override
    public Integer component11() {
        return getGoalScore();
    }

    @Override
    public Integer component12() {
        return getState();
    }

    @Override
    public String component13() {
        return getInputId();
    }

    @Override
    public LocalDateTime component14() {
        return getInputDate();
    }

    @Override
    public String component15() {
        return getUpdateId();
    }

    @Override
    public LocalDateTime component16() {
        return getUpdateDate();
    }

    @Override
    public Integer value1() {
        return getExamNo();
    }

    @Override
    public String value2() {
        return getDate();
    }

    @Override
    public Integer value3() {
        return getClassNo();
    }

    @Override
    public Integer value4() {
        return getGrade();
    }

    @Override
    public String value5() {
        return getCourse();
    }

    @Override
    public String value6() {
        return getMediumCategory();
    }

    @Override
    public String value7() {
        return getTypeGroup();
    }

    @Override
    public Integer value8() {
        return getCount();
    }

    @Override
    public Integer value9() {
        return getLevelDifficulty();
    }

    @Override
    public String value10() {
        return getTarget();
    }

    @Override
    public Integer value11() {
        return getGoalScore();
    }

    @Override
    public Integer value12() {
        return getState();
    }

    @Override
    public String value13() {
        return getInputId();
    }

    @Override
    public LocalDateTime value14() {
        return getInputDate();
    }

    @Override
    public String value15() {
        return getUpdateId();
    }

    @Override
    public LocalDateTime value16() {
        return getUpdateDate();
    }

    @Override
    public JExamListRecord value1(Integer value) {
        setExamNo(value);
        return this;
    }

    @Override
    public JExamListRecord value2(String value) {
        setDate(value);
        return this;
    }

    @Override
    public JExamListRecord value3(Integer value) {
        setClassNo(value);
        return this;
    }

    @Override
    public JExamListRecord value4(Integer value) {
        setGrade(value);
        return this;
    }

    @Override
    public JExamListRecord value5(String value) {
        setCourse(value);
        return this;
    }

    @Override
    public JExamListRecord value6(String value) {
        setMediumCategory(value);
        return this;
    }

    @Override
    public JExamListRecord value7(String value) {
        setTypeGroup(value);
        return this;
    }

    @Override
    public JExamListRecord value8(Integer value) {
        setCount(value);
        return this;
    }

    @Override
    public JExamListRecord value9(Integer value) {
        setLevelDifficulty(value);
        return this;
    }

    @Override
    public JExamListRecord value10(String value) {
        setTarget(value);
        return this;
    }

    @Override
    public JExamListRecord value11(Integer value) {
        setGoalScore(value);
        return this;
    }

    @Override
    public JExamListRecord value12(Integer value) {
        setState(value);
        return this;
    }

    @Override
    public JExamListRecord value13(String value) {
        setInputId(value);
        return this;
    }

    @Override
    public JExamListRecord value14(LocalDateTime value) {
        setInputDate(value);
        return this;
    }

    @Override
    public JExamListRecord value15(String value) {
        setUpdateId(value);
        return this;
    }

    @Override
    public JExamListRecord value16(LocalDateTime value) {
        setUpdateDate(value);
        return this;
    }

    @Override
    public JExamListRecord values(Integer value1, String value2, Integer value3, Integer value4, String value5, String value6, String value7, Integer value8, Integer value9, String value10, Integer value11, Integer value12, String value13, LocalDateTime value14, String value15, LocalDateTime value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JExamListRecord
     */
    public JExamListRecord() {
        super(JExamList.EXAM_LIST);
    }

    /**
     * Create a detached, initialised JExamListRecord
     */
    public JExamListRecord(Integer examNo, String date, Integer classNo, Integer grade, String course, String mediumCategory, String typeGroup, Integer count, Integer levelDifficulty, String target, Integer goalScore, Integer state, String inputId, LocalDateTime inputDate, String updateId, LocalDateTime updateDate) {
        super(JExamList.EXAM_LIST);

        set(0, examNo);
        set(1, date);
        set(2, classNo);
        set(3, grade);
        set(4, course);
        set(5, mediumCategory);
        set(6, typeGroup);
        set(7, count);
        set(8, levelDifficulty);
        set(9, target);
        set(10, goalScore);
        set(11, state);
        set(12, inputId);
        set(13, inputDate);
        set(14, updateId);
        set(15, updateDate);
    }
}
