/*
 * This file is generated by jOOQ.
 */
package net.haaim.web.jooq.entity.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import net.haaim.web.jooq.entity.JHaaimDb;
import net.haaim.web.jooq.entity.Keys;
import net.haaim.web.jooq.entity.tables.records.JMenuRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 메뉴
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JMenu extends TableImpl<JMenuRecord> {

    private static final long serialVersionUID = -1339002671;

    /**
     * The reference instance of <code>haaim_db.menu</code>
     */
    public static final JMenu MENU = new JMenu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JMenuRecord> getRecordType() {
        return JMenuRecord.class;
    }

    /**
     * The column <code>haaim_db.menu.menu_code</code>. 메뉴코드
     */
    public final TableField<JMenuRecord, String> MENU_CODE = createField(DSL.name("menu_code"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "메뉴코드");

    /**
     * The column <code>haaim_db.menu.menu_name</code>. 메뉴명
     */
    public final TableField<JMenuRecord, String> MENU_NAME = createField(DSL.name("menu_name"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "메뉴명");

    /**
     * The column <code>haaim_db.menu.parent_menu_code</code>. 부모 메뉴 코드
     */
    public final TableField<JMenuRecord, String> PARENT_MENU_CODE = createField(DSL.name("parent_menu_code"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "부모 메뉴 코드");

    /**
     * The column <code>haaim_db.menu.depth</code>. 메뉴 depth
     */
    public final TableField<JMenuRecord, Integer> DEPTH = createField(DSL.name("depth"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "메뉴 depth");

    /**
     * The column <code>haaim_db.menu.url</code>.
     */
    public final TableField<JMenuRecord, String> URL = createField(DSL.name("url"), org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>haaim_db.menu.use_yn</code>. 사용여부
     */
    public final TableField<JMenuRecord, Integer> USE_YN = createField(DSL.name("use_yn"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "사용여부");

    /**
     * The column <code>haaim_db.menu.sort</code>. 정렬순서
     */
    public final TableField<JMenuRecord, Integer> SORT = createField(DSL.name("sort"), org.jooq.impl.SQLDataType.INTEGER, this, "정렬순서");

    /**
     * The column <code>haaim_db.menu.input_id</code>.
     */
    public final TableField<JMenuRecord, String> INPUT_ID = createField(DSL.name("input_id"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>haaim_db.menu.input_date</code>.
     */
    public final TableField<JMenuRecord, LocalDateTime> INPUT_DATE = createField(DSL.name("input_date"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>haaim_db.menu.update_id</code>.
     */
    public final TableField<JMenuRecord, String> UPDATE_ID = createField(DSL.name("update_id"), org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>haaim_db.menu.update_date</code>.
     */
    public final TableField<JMenuRecord, LocalDateTime> UPDATE_DATE = createField(DSL.name("update_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>haaim_db.menu</code> table reference
     */
    public JMenu() {
        this(DSL.name("menu"), null);
    }

    /**
     * Create an aliased <code>haaim_db.menu</code> table reference
     */
    public JMenu(String alias) {
        this(DSL.name(alias), MENU);
    }

    /**
     * Create an aliased <code>haaim_db.menu</code> table reference
     */
    public JMenu(Name alias) {
        this(alias, MENU);
    }

    private JMenu(Name alias, Table<JMenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private JMenu(Name alias, Table<JMenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("메뉴"), TableOptions.table());
    }

    public <O extends Record> JMenu(Table<O> child, ForeignKey<O, JMenuRecord> key) {
        super(child, key, MENU);
    }

    @Override
    public Schema getSchema() {
        return JHaaimDb.HAAIM_DB;
    }

    @Override
    public UniqueKey<JMenuRecord> getPrimaryKey() {
        return Keys.KEY_MENU_PRIMARY;
    }

    @Override
    public List<UniqueKey<JMenuRecord>> getKeys() {
        return Arrays.<UniqueKey<JMenuRecord>>asList(Keys.KEY_MENU_PRIMARY);
    }

    @Override
    public JMenu as(String alias) {
        return new JMenu(DSL.name(alias), this);
    }

    @Override
    public JMenu as(Name alias) {
        return new JMenu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JMenu rename(String name) {
        return new JMenu(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JMenu rename(Name name) {
        return new JMenu(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, String, String, Integer, String, Integer, Integer, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
