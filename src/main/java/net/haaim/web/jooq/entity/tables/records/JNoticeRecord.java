/*
 * This file is generated by jOOQ.
 */
package net.haaim.web.jooq.entity.tables.records;


import java.time.LocalDateTime;

import net.haaim.web.jooq.entity.tables.JNotice;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 공지사항
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JNoticeRecord extends UpdatableRecordImpl<JNoticeRecord> implements Record8<Integer, String, String, Integer, String, LocalDateTime, String, LocalDateTime> {

    private static final long serialVersionUID = 301803278;

    /**
     * Setter for <code>haaim_db.notice.no</code>.
     */
    public void setNo(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>haaim_db.notice.no</code>.
     */
    public Integer getNo() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>haaim_db.notice.title</code>. 제목
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>haaim_db.notice.title</code>. 제목
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>haaim_db.notice.contents</code>. 내용
     */
    public void setContents(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>haaim_db.notice.contents</code>. 내용
     */
    public String getContents() {
        return (String) get(2);
    }

    /**
     * Setter for <code>haaim_db.notice.state</code>. 상태(0:HIDDEN/1:VIEW)
     */
    public void setState(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>haaim_db.notice.state</code>. 상태(0:HIDDEN/1:VIEW)
     */
    public Integer getState() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>haaim_db.notice.input_id</code>.
     */
    public void setInputId(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>haaim_db.notice.input_id</code>.
     */
    public String getInputId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>haaim_db.notice.input_date</code>.
     */
    public void setInputDate(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>haaim_db.notice.input_date</code>.
     */
    public LocalDateTime getInputDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>haaim_db.notice.update_id</code>.
     */
    public void setUpdateId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>haaim_db.notice.update_id</code>.
     */
    public String getUpdateId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>haaim_db.notice.update_date</code>.
     */
    public void setUpdateDate(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>haaim_db.notice.update_date</code>.
     */
    public LocalDateTime getUpdateDate() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, Integer, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, Integer, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JNotice.NOTICE.NO;
    }

    @Override
    public Field<String> field2() {
        return JNotice.NOTICE.TITLE;
    }

    @Override
    public Field<String> field3() {
        return JNotice.NOTICE.CONTENTS;
    }

    @Override
    public Field<Integer> field4() {
        return JNotice.NOTICE.STATE;
    }

    @Override
    public Field<String> field5() {
        return JNotice.NOTICE.INPUT_ID;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return JNotice.NOTICE.INPUT_DATE;
    }

    @Override
    public Field<String> field7() {
        return JNotice.NOTICE.UPDATE_ID;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return JNotice.NOTICE.UPDATE_DATE;
    }

    @Override
    public Integer component1() {
        return getNo();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getContents();
    }

    @Override
    public Integer component4() {
        return getState();
    }

    @Override
    public String component5() {
        return getInputId();
    }

    @Override
    public LocalDateTime component6() {
        return getInputDate();
    }

    @Override
    public String component7() {
        return getUpdateId();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdateDate();
    }

    @Override
    public Integer value1() {
        return getNo();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getContents();
    }

    @Override
    public Integer value4() {
        return getState();
    }

    @Override
    public String value5() {
        return getInputId();
    }

    @Override
    public LocalDateTime value6() {
        return getInputDate();
    }

    @Override
    public String value7() {
        return getUpdateId();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdateDate();
    }

    @Override
    public JNoticeRecord value1(Integer value) {
        setNo(value);
        return this;
    }

    @Override
    public JNoticeRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public JNoticeRecord value3(String value) {
        setContents(value);
        return this;
    }

    @Override
    public JNoticeRecord value4(Integer value) {
        setState(value);
        return this;
    }

    @Override
    public JNoticeRecord value5(String value) {
        setInputId(value);
        return this;
    }

    @Override
    public JNoticeRecord value6(LocalDateTime value) {
        setInputDate(value);
        return this;
    }

    @Override
    public JNoticeRecord value7(String value) {
        setUpdateId(value);
        return this;
    }

    @Override
    public JNoticeRecord value8(LocalDateTime value) {
        setUpdateDate(value);
        return this;
    }

    @Override
    public JNoticeRecord values(Integer value1, String value2, String value3, Integer value4, String value5, LocalDateTime value6, String value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JNoticeRecord
     */
    public JNoticeRecord() {
        super(JNotice.NOTICE);
    }

    /**
     * Create a detached, initialised JNoticeRecord
     */
    public JNoticeRecord(Integer no, String title, String contents, Integer state, String inputId, LocalDateTime inputDate, String updateId, LocalDateTime updateDate) {
        super(JNotice.NOTICE);

        set(0, no);
        set(1, title);
        set(2, contents);
        set(3, state);
        set(4, inputId);
        set(5, inputDate);
        set(6, updateId);
        set(7, updateDate);
    }
}
