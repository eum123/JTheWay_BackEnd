/*
 * This file is generated by jOOQ.
 */
package net.haaim.web.jooq.entity.tables.records;


import java.time.LocalDateTime;

import net.haaim.web.jooq.entity.tables.JScoreMngt;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 시험점수관리(중간/기말/모의고사/수능점수)
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JScoreMngtRecord extends UpdatableRecordImpl<JScoreMngtRecord> implements Record11<Integer, Integer, Integer, String, String, String, String, String, LocalDateTime, String, LocalDateTime> {

    private static final long serialVersionUID = 2032705712;

    /**
     * Setter for <code>haaim_db.score_mngt.no</code>.
     */
    public void setNo(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>haaim_db.score_mngt.no</code>.
     */
    public Integer getNo() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>haaim_db.score_mngt.year</code>.
     */
    public void setYear(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>haaim_db.score_mngt.year</code>.
     */
    public Integer getYear() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>haaim_db.score_mngt.student_no</code>.
     */
    public void setStudentNo(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>haaim_db.score_mngt.student_no</code>.
     */
    public Integer getStudentNo() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>haaim_db.score_mngt.term</code>. 학기, 기간
     */
    public void setTerm(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>haaim_db.score_mngt.term</code>. 학기, 기간
     */
    public String getTerm() {
        return (String) get(3);
    }

    /**
     * Setter for <code>haaim_db.score_mngt.exam</code>. 시험 (midterm exam / finals / mock test / sat)
     */
    public void setExam(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>haaim_db.score_mngt.exam</code>. 시험 (midterm exam / finals / mock test / sat)
     */
    public String getExam() {
        return (String) get(4);
    }

    /**
     * Setter for <code>haaim_db.score_mngt.score</code>. 점수
     */
    public void setScore(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>haaim_db.score_mngt.score</code>. 점수
     */
    public String getScore() {
        return (String) get(5);
    }

    /**
     * Setter for <code>haaim_db.score_mngt.description</code>.
     */
    public void setDescription(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>haaim_db.score_mngt.description</code>.
     */
    public String getDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>haaim_db.score_mngt.input_id</code>.
     */
    public void setInputId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>haaim_db.score_mngt.input_id</code>.
     */
    public String getInputId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>haaim_db.score_mngt.input_date</code>.
     */
    public void setInputDate(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>haaim_db.score_mngt.input_date</code>.
     */
    public LocalDateTime getInputDate() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>haaim_db.score_mngt.update_id</code>.
     */
    public void setUpdateId(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>haaim_db.score_mngt.update_id</code>.
     */
    public String getUpdateId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>haaim_db.score_mngt.update_date</code>.
     */
    public void setUpdateDate(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>haaim_db.score_mngt.update_date</code>.
     */
    public LocalDateTime getUpdateDate() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Integer, Integer, String, String, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, Integer, Integer, String, String, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JScoreMngt.SCORE_MNGT.NO;
    }

    @Override
    public Field<Integer> field2() {
        return JScoreMngt.SCORE_MNGT.YEAR;
    }

    @Override
    public Field<Integer> field3() {
        return JScoreMngt.SCORE_MNGT.STUDENT_NO;
    }

    @Override
    public Field<String> field4() {
        return JScoreMngt.SCORE_MNGT.TERM;
    }

    @Override
    public Field<String> field5() {
        return JScoreMngt.SCORE_MNGT.EXAM;
    }

    @Override
    public Field<String> field6() {
        return JScoreMngt.SCORE_MNGT.SCORE;
    }

    @Override
    public Field<String> field7() {
        return JScoreMngt.SCORE_MNGT.DESCRIPTION;
    }

    @Override
    public Field<String> field8() {
        return JScoreMngt.SCORE_MNGT.INPUT_ID;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return JScoreMngt.SCORE_MNGT.INPUT_DATE;
    }

    @Override
    public Field<String> field10() {
        return JScoreMngt.SCORE_MNGT.UPDATE_ID;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return JScoreMngt.SCORE_MNGT.UPDATE_DATE;
    }

    @Override
    public Integer component1() {
        return getNo();
    }

    @Override
    public Integer component2() {
        return getYear();
    }

    @Override
    public Integer component3() {
        return getStudentNo();
    }

    @Override
    public String component4() {
        return getTerm();
    }

    @Override
    public String component5() {
        return getExam();
    }

    @Override
    public String component6() {
        return getScore();
    }

    @Override
    public String component7() {
        return getDescription();
    }

    @Override
    public String component8() {
        return getInputId();
    }

    @Override
    public LocalDateTime component9() {
        return getInputDate();
    }

    @Override
    public String component10() {
        return getUpdateId();
    }

    @Override
    public LocalDateTime component11() {
        return getUpdateDate();
    }

    @Override
    public Integer value1() {
        return getNo();
    }

    @Override
    public Integer value2() {
        return getYear();
    }

    @Override
    public Integer value3() {
        return getStudentNo();
    }

    @Override
    public String value4() {
        return getTerm();
    }

    @Override
    public String value5() {
        return getExam();
    }

    @Override
    public String value6() {
        return getScore();
    }

    @Override
    public String value7() {
        return getDescription();
    }

    @Override
    public String value8() {
        return getInputId();
    }

    @Override
    public LocalDateTime value9() {
        return getInputDate();
    }

    @Override
    public String value10() {
        return getUpdateId();
    }

    @Override
    public LocalDateTime value11() {
        return getUpdateDate();
    }

    @Override
    public JScoreMngtRecord value1(Integer value) {
        setNo(value);
        return this;
    }

    @Override
    public JScoreMngtRecord value2(Integer value) {
        setYear(value);
        return this;
    }

    @Override
    public JScoreMngtRecord value3(Integer value) {
        setStudentNo(value);
        return this;
    }

    @Override
    public JScoreMngtRecord value4(String value) {
        setTerm(value);
        return this;
    }

    @Override
    public JScoreMngtRecord value5(String value) {
        setExam(value);
        return this;
    }

    @Override
    public JScoreMngtRecord value6(String value) {
        setScore(value);
        return this;
    }

    @Override
    public JScoreMngtRecord value7(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public JScoreMngtRecord value8(String value) {
        setInputId(value);
        return this;
    }

    @Override
    public JScoreMngtRecord value9(LocalDateTime value) {
        setInputDate(value);
        return this;
    }

    @Override
    public JScoreMngtRecord value10(String value) {
        setUpdateId(value);
        return this;
    }

    @Override
    public JScoreMngtRecord value11(LocalDateTime value) {
        setUpdateDate(value);
        return this;
    }

    @Override
    public JScoreMngtRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, String value6, String value7, String value8, LocalDateTime value9, String value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JScoreMngtRecord
     */
    public JScoreMngtRecord() {
        super(JScoreMngt.SCORE_MNGT);
    }

    /**
     * Create a detached, initialised JScoreMngtRecord
     */
    public JScoreMngtRecord(Integer no, Integer year, Integer studentNo, String term, String exam, String score, String description, String inputId, LocalDateTime inputDate, String updateId, LocalDateTime updateDate) {
        super(JScoreMngt.SCORE_MNGT);

        set(0, no);
        set(1, year);
        set(2, studentNo);
        set(3, term);
        set(4, exam);
        set(5, score);
        set(6, description);
        set(7, inputId);
        set(8, inputDate);
        set(9, updateId);
        set(10, updateDate);
    }
}
